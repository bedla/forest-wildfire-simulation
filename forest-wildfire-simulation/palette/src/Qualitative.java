/**
 * This class contains the RGB values of the legend of the 
 * Divergent Color Scheme.
 * Each field contains an array with several legends for a
 * different number of classes (classes in the statistical sense)
 * Each legend array contains the RGB values of the colors composing 
 * that class.
 * The methods to access the fields are inherited from the class
 * ColorSchemes
 */


public strictfp class Qualitative extends ColorSchemes {
		
	static final int 	Accent	[][][] = {  									
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	},
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	,
			{	255	,	255	,	153	}	},
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	,
			{	255	,	255	,	153	}	,
			{	56	,	108	,	176	}	},
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	,
			{	255	,	255	,	153	}	,
			{	56	,	108	,	176	}	,
			{	240	,	2	,	127	}	},
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	,
			{	255	,	255	,	153	}	,
			{	56	,	108	,	176	}	,
			{	240	,	2	,	127	}	,
			{	191	,	91	,	23	}	},
		{	{	127	,	201	,	127	}	,
			{	190	,	174	,	212	}	,
			{	253	,	192	,	134	}	,
			{	255	,	255	,	153	}	,
			{	56	,	108	,	176	}	,
			{	240	,	2	,	127	}	,
			{	191	,	91	,	23	}	,
			{	102	,	102	,	102	}	}};
	static final int 	Dark2	[][][] = {  									
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	},
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	,
			{	231	,	41	,	138	}	},
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	,
			{	231	,	41	,	138	}	,
			{	102	,	166	,	30	}	},
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	,
			{	231	,	41	,	138	}	,
			{	102	,	166	,	30	}	,
			{	230	,	171	,	2	}	},
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	,
			{	231	,	41	,	138	}	,
			{	102	,	166	,	30	}	,
			{	230	,	171	,	2	}	,
			{	166	,	118	,	29	}	},
		{	{	27	,	158	,	119	}	,
			{	217	,	95	,	2	}	,
			{	117	,	112	,	179	}	,
			{	231	,	41	,	138	}	,
			{	102	,	166	,	30	}	,
			{	230	,	171	,	2	}	,
			{	166	,	118	,	29	}	,
			{	102	,	102	,	102	}	}};
	static final int 	Paired	[][][] = {  									
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	,
			{	255	,	127	,	0	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	,
			{	255	,	127	,	0	}	,
			{	202	,	178	,	214	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	,
			{	255	,	127	,	0	}	,
			{	202	,	178	,	214	}	,
			{	106	,	61	,	154	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	,
			{	255	,	127	,	0	}	,
			{	202	,	178	,	214	}	,
			{	106	,	61	,	154	}	,
			{	255	,	255	,	153	}	},
		{	{	166	,	206	,	227	}	,
			{	31	,	120	,	180	}	,
			{	178	,	223	,	138	}	,
			{	51	,	160	,	44	}	,
			{	251	,	154	,	153	}	,
			{	227	,	26	,	28	}	,
			{	253	,	191	,	111	}	,
			{	255	,	127	,	0	}	,
			{	202	,	178	,	214	}	,
			{	106	,	61	,	154	}	,
			{	255	,	255	,	153	}	,
			{	177	,	89	,	40	}	}};
	static final int 	Pastel1	[][][] = {  									
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	,
			{	254	,	217	,	166	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	,
			{	254	,	217	,	166	}	,
			{	255	,	255	,	204	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	,
			{	254	,	217	,	166	}	,
			{	255	,	255	,	204	}	,
			{	229	,	216	,	189	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	,
			{	254	,	217	,	166	}	,
			{	255	,	255	,	204	}	,
			{	229	,	216	,	189	}	,
			{	253	,	218	,	236	}	},
		{	{	251	,	180	,	174	}	,
			{	179	,	205	,	227	}	,
			{	204	,	235	,	197	}	,
			{	222	,	203	,	228	}	,
			{	254	,	217	,	166	}	,
			{	255	,	255	,	204	}	,
			{	229	,	216	,	189	}	,
			{	253	,	218	,	236	}	,
			{	242	,	242	,	242	}	}};
	static final int 	Pastel2	[][][] = {  									
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	},
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	,
			{	244	,	202	,	228	}	},
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	,
			{	244	,	202	,	228	}	,
			{	230	,	245	,	201	}	},
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	,
			{	244	,	202	,	228	}	,
			{	230	,	245	,	201	}	,
			{	255	,	242	,	174	}	},
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	,
			{	244	,	202	,	228	}	,
			{	230	,	245	,	201	}	,
			{	255	,	242	,	174	}	,
			{	241	,	226	,	204	}	},
		{	{	179	,	226	,	205	}	,
			{	253	,	205	,	172	}	,
			{	203	,	213	,	232	}	,
			{	244	,	202	,	228	}	,
			{	230	,	245	,	201	}	,
			{	255	,	242	,	174	}	,
			{	241	,	226	,	204	}	,
			{	204	,	204	,	204	}	}};
	static final int 	Set1	[][][] = {  									
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	,
			{	255	,	127	,	0	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	,
			{	255	,	127	,	0	}	,
			{	255	,	255	,	51	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	,
			{	255	,	127	,	0	}	,
			{	255	,	255	,	51	}	,
			{	166	,	86	,	40	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	,
			{	255	,	127	,	0	}	,
			{	255	,	255	,	51	}	,
			{	166	,	86	,	40	}	,
			{	247	,	129	,	191	}	},
		{	{	228	,	26	,	28	}	,
			{	55	,	126	,	184	}	,
			{	77	,	175	,	74	}	,
			{	152	,	78	,	163	}	,
			{	255	,	127	,	0	}	,
			{	255	,	255	,	51	}	,
			{	166	,	86	,	40	}	,
			{	247	,	129	,	191	}	,
			{	153	,	153	,	153	}	}};
	static final int 	Set2	[][][] = {  									
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	},
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	,
			{	231	,	138	,	195	}	},
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	,
			{	231	,	138	,	195	}	,
			{	166	,	216	,	84	}	},
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	,
			{	231	,	138	,	195	}	,
			{	166	,	216	,	84	}	,
			{	255	,	217	,	47	}	},
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	,
			{	231	,	138	,	195	}	,
			{	166	,	216	,	84	}	,
			{	255	,	217	,	47	}	,
			{	229	,	196	,	148	}	},
		{	{	102	,	194	,	165	}	,
			{	252	,	141	,	98	}	,
			{	141	,	160	,	203	}	,
			{	231	,	138	,	195	}	,
			{	166	,	216	,	84	}	,
			{	255	,	217	,	47	}	,
			{	229	,	196	,	148	}	,
			{	179	,	179	,	179	}	}};
	static final int 	Set3	[][][] = {  									
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	,
			{	252	,	205	,	229	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	,
			{	252	,	205	,	229	}	,
			{	217	,	217	,	217	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	,
			{	252	,	205	,	229	}	,
			{	217	,	217	,	217	}	,
			{	188	,	128	,	189	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	,
			{	252	,	205	,	229	}	,
			{	217	,	217	,	217	}	,
			{	188	,	128	,	189	}	,
			{	204	,	235	,	197	}	},
		{	{	141	,	211	,	199	}	,
			{	255	,	255	,	179	}	,
			{	190	,	186	,	218	}	,
			{	251	,	128	,	114	}	,
			{	128	,	177	,	211	}	,
			{	253	,	180	,	98	}	,
			{	179	,	222	,	105	}	,
			{	252	,	205	,	229	}	,
			{	217	,	217	,	217	}	,
			{	188	,	128	,	189	}	,
			{	204	,	235	,	197	}	,
			{	255	,	237	,	111	}	}};

}
	
//Apache-Style Software License for ColorBrewer software and ColorBrewer Color Schemes								
//Version 1.1								
//
//Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The Pennsylvania State University. All rights reserved.								
//Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:								
//1. Redistributions as source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//2. The end-user documentation included with the redistribution, if any, must include the following acknowledgment:
//This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).
//Alternately, this acknowledgment may appear in the software itself, if and wherever such third-party acknowledgments normally appear.
//4. The name "ColorBrewer" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please 
//contact Cynthia Brewer at cbrewer@psu.edu.
//5. Products derived from this software may not be called "ColorBrewer", nor may "ColorBrewer" appear in their name, without prior written permission of Cynthia Brewer.
//
//THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
//MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CYNTHIA BREWER, MARK HARROWER, OR THE 
//PENNSYLVANIA STATE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
//BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
//CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY 
//WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
