; vrati sousedni patche parcel pro 4 okoli
; vzdy vrati (list vlevo vpravo nahore dole) - kazdy prvek muze byt empty-agent-set
to-report parcel-neighbors4 [ this-patch ]
  let this-parcel-x [ parcel-x ] of this-patch ; parcela pro X na volanem patchi
  let this-parcel-y [ parcel-y ] of this-patch ; parcela pro Y na volanem patchi

  let that-parcel-x [ parcel-x ] of this-patch ; pomocna parcela X
  let that-parcel-y [ parcel-y ] of this-patch ; pomocna parcela Y

  let x [ pxcor ] of this-patch
  let y [ pycor ] of this-patch
  let break false
  
  let vpravo no-patches 
  let vlevo no-patches 
  let nahore no-patches 
  let dole no-patches 

  ; nalezneme parcelu vpravo ... tj. pricitam X
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x <= max-pxcor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X souradnici rozdilne
    if that-parcel-x != this-parcel-x
    [    
      set break true
    ]
    set x x + 1
  ]  
  if this-parcel-x != that-parcel-x 
  [
    set vpravo patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu vlevo ... tj. odecitam X
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x >= min-pxcor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X souradnici rozdilne
    if that-parcel-x != this-parcel-x
    [    
      set break true
    ]
    set x x - 1
  ]
  if this-parcel-x != that-parcel-x 
  [
    set vlevo patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu nahore ... tj. pricitam Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ y <= max-pycor and not break ]
  [
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v Y souradnici rozdilne
    if that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set y y + 1
  ]  
  if this-parcel-y != that-parcel-y
  [
    set nahore patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu nahore ... tj. odecitam Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ y >= min-pycor and not break ]
  [
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v Y souradnici rozdilne
    if that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set y y - 1
  ]  
  if this-parcel-y != that-parcel-y
  [
    set dole patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]
  
  report (list vlevo vpravo nahore dole)
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; vrati sousedni patche parcel pro 8mi okoli
; vzdy vrati (list vlevo vpravo nahore dole) - kazdy prvek muze byt empty-agent-set
to-report parcel-neighbors [ this-patch ]
  let this-parcel-x [ parcel-x ] of this-patch ; parcela pro X na volanem patchi
  let this-parcel-y [ parcel-y ] of this-patch ; parcela pro Y na volanem patchi

  let that-parcel-x [ parcel-x ] of this-patch ; pomocna parcela X
  let that-parcel-y [ parcel-y ] of this-patch ; pomocna parcela Y

  let x [ pxcor ] of this-patch
  let y [ pycor ] of this-patch
  let break false
  
  let vpravo no-patches 
  let vlevo no-patches 
  let nahore no-patches 
  let dole no-patches
  let vpravo-nahore no-patches
  let vlevo-nahore no-patches
  let vpravo-dole no-patches
  let vlevo-dole no-patches

  ; nalezneme parcelu vpravo ... tj. pricitam X
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x <= max-pxcor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X souradnici rozdilne
    if that-parcel-x != this-parcel-x
    [    
      set break true
    ]
    set x x + 1
  ]  
  if this-parcel-x != that-parcel-x 
  [
    set vpravo patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu vlevo ... tj. odecitam X
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x >= min-pxcor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X souradnici rozdilne
    if that-parcel-x != this-parcel-x
    [    
      set break true
    ]
    set x x - 1
  ]
  if this-parcel-x != that-parcel-x 
  [
    set vlevo patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu nahore ... tj. pricitam Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ y <= max-pycor and not break ]
  [
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v Y souradnici rozdilne
    if that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set y y + 1
  ]  
  if this-parcel-y != that-parcel-y
  [
    set nahore patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu nahore ... tj. odecitam Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ y >= min-pycor and not break ]
  [
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v Y souradnici rozdilne
    if that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set y y - 1
  ]  
  if this-parcel-y != that-parcel-y
  [
    set dole patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]
  
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  
  ; nalezneme parcelu vpravo nahore ... tj. pricitam X a pricitanim Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x <= max-pxcor and y <= max-pycor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X i v Y souradnici rozdilne
    if that-parcel-x != this-parcel-x and that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set x x + 1
    set y y + 1
  ]  
  if this-parcel-x != that-parcel-x and this-parcel-y != that-parcel-y
  [
    set vpravo-nahore patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu vlevo nahore ... tj. odecitanim X a pricitanim Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x >= min-pxcor and y <= max-pycor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X i v Y souradnici rozdilne
    if that-parcel-x != this-parcel-x and that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set x x - 1
    set y y + 1
  ]  
  if this-parcel-x != that-parcel-x and this-parcel-y != that-parcel-y
  [
    set vlevo-nahore patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu vpravo dole ... tj. pricitam X a odecitanim Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x <= max-pxcor and y >= min-pycor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X i v Y souradnici rozdilne
    if that-parcel-x != this-parcel-x and that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set x x + 1
    set y y - 1
  ]  
  if this-parcel-x != that-parcel-x and this-parcel-y != that-parcel-y
  [
    set vpravo-dole patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]

  ; nalezneme parcelu vlevo dole ... tj. odecitanim X a odecitanim Y
  set that-parcel-x [ parcel-x ] of this-patch
  set that-parcel-y [ parcel-y ] of this-patch
  set x [ pxcor ] of this-patch
  set y [ pycor ] of this-patch
  set break false
  while [ x >= min-pxcor and y >= min-pycor and not break ]
  [
    set that-parcel-x [ parcel-x ] of patch x y
    set that-parcel-y [ parcel-y ] of patch x y
    ; jedu po patches dokud neni cislo parcely v X i v Y souradnici rozdilne
    if that-parcel-x != this-parcel-x and that-parcel-y != this-parcel-y
    [    
      set break true
    ]
    set x x - 1
    set y y - 1
  ]  
  if this-parcel-x != that-parcel-x and this-parcel-y != that-parcel-y
  [
    set vlevo-dole patches with [ parcel-x = that-parcel-x and parcel-y = that-parcel-y ]
  ]  

  report (list vlevo vpravo nahore dole vlevo-nahore vpravo-nahore vpravo-dole vlevo-dole)

end
